version: '3.8'

services:

  database:  
    container_name: kong-database
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    networks:
      - knet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      retries: 3

  migration:
    container_name: kong-migration
    image: kong:3.7.1
    command: /bin/sh -c 'kong migrations bootstrap'
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
    networks:
      - knet
    depends_on:
      database:
        condition: service_healthy

  gateway:
    container_name: kong-gateway
    image: kong:3.7.1
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - 8000:8000
      - 8443:8443
      - 127.0.0.1:8001:8001
      - 127.0.0.1:8002:8002
      - 127.0.0.1:8444:8444
    networks:
      - knet
    restart: always
    depends_on:
      database:
        condition: service_healthy

  ups-webapi:
    container_name: kong-ups-webapi
    image: httpd:2.4
    volumes:
      - ./ups-webapi/htdocs:/usr/local/apache2/htdocs
    ports:
      - 8090:80
    networks:
      - knet

networks:
  knet:
    name: kong-net
    driver: bridge
